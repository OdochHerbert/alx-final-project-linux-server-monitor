##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
        #listen 80 default_server;
        #listen [::]:80 default_server;
        listen 80;
        server_name localhost ;
       # root /home/odoch;
        #autoindex on; 

         location /network/users {
        proxy_pass http://127.0.0.1:5007/network/users;
    }

    location /network/interfaces {
        proxy_pass http://127.0.0.1:5007/network/interfaces;
    }

    location /network/ip_addresses {
        proxy_pass http://127.0.0.1:5007/network/ip_addresses;
    }

    location /network/routing_tables {
        proxy_pass http://127.0.0.1:5007/network/routing_tables;
    }

    location /network/statistics {
        proxy_pass http://127.0.0.1:5007/network/statistics;
    }

    location /speed_test {
        proxy_pass http://127.0.0.1:5007/speed_test;
    }

    location /linked_devices {
        proxy_pass http://127.0.0.1:5007/linked_devices;
    }

    location /get_network_data {
        proxy_pass http://127.0.0.1:5007/get_network_data;
    }

    location /browse {
        proxy_pass http://127.0.0.1:5007/browse;
    }
   location /open {
        proxy_pass http://127.0.0.1:5006/open;
    }
   location /api/upload {
        # Endpoint for file upload
        proxy_pass http://localhost:5000/upload;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/files/ {
        # Endpoint to list files
        proxy_pass http://localhost:5000/files/;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /api/files/download/ {
        # Endpoint to download files
        proxy_pass http://localhost:5000/files/;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/files/delete/ {
        # Endpoint to delete files
        proxy_pass http://localhost:5000/files/;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    root /;

        # Add index.php to the list if you are using PHP
        #index index.html index.htm index.nginx-debian.html;

        #server_name _;

        location / {
                add_header Access-Control-Allow-Origin http://localhost:3000;
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}

root /;

        # Add index.php to the list if you are using PHP
        #index index.html index.htm index.nginx-debian.html;

        #server_name _;

        location / {
                add_header Access-Control-Allow-Origin http://localhost:3000;
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}



